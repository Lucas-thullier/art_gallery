version: '3.9'

services:
  db:
    container_name: db
    hostname: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - main
    ports:
      - '5432:5432'
    restart: on-failure
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  app:
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    container_name: app
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - rabbitmq
    ports:
      - '8000:8000'
    hostname: app
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - main
    restart: on-failure

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:latest
    networks:
      - main
    ports:
      - '5672:5672'
    restart: on-failure

  # celery_worker:
  #   command: celery -A  worker -l info
  #   container_name: celery_worker
  #   depends_on:
  #     - app
  #     - db
  #     - rabbitmq
  #   hostname: celery_worker
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   networks:
  #     - main
  #   restart: on-failure

  # celery_beat:
  #   command: celery -A mysite beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
  #   container_name: celery_beat
  #   depends_on:
  #     - app
  #     - postgres
  #     - rabbitmq
  #   hostname: celery_beat
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   networks:
  #     - main
  #   restart: on-failure

networks:
  main:

volumes:
  postgresql-data:
