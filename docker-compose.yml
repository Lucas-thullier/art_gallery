version: '3.9'

services:
  db:
    container_name: db
    hostname: postgres
    image: postgres:latest
    env_file: &envfile
      - .env
    networks:
      - my-app-network
    ports:
      - '5432:5432'
    restart: on-failure
    volumes:
      - postgresdata:/var/lib/postgresql/data

  backend:
    container_name: backend
    env_file: *envfile
    depends_on:
      - db
      - rabbitmq
    ports:
      - '8000:8000'
    hostname: backend
    build: ./backend
    networks:
      - my-app-network
    restart: on-failure
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000 & watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A worker.worker.app worker --loglevel=INFO"

  frontend:
    container_name: frontend
    env_file: *envfile
    hostname: frontend
    build: ./frontend
    ports:
      - 3000:3000
    networks:
      - my-app-network
    restart: on-failure
    command: bash -c "yarn serve"

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3.8-alpine
    env_file: *envfile
    networks:
      - my-app-network
    ports:
      - '5672:5672'
      - '15672:15672'
    restart: on-failure

  flower:
    image: zoomeranalytics/flower:0.9.1-4.0.2
    container_name: flower
    hostname: flower
    restart: 'no'
    env_file: *envfile
    ports:
      - '5555:5555'
    depends_on:
      - rabbitmq
    networks:
      - my-app-network

volumes:
  my-app:
    external: true
  postgresdata:

networks:
  my-app-network:
    external: true